@startuml
namespace DotNeet {
	namespace DotNeet.Providers.ComickFun {
		class Page {
			+ h : int <<get>> <<set>>
			+ w : int <<get>> <<set>>
			+ b2key : string <<get>> <<set>>
		}
		class Chapter {
			+ title : string <<get>> <<set>>
			+ chap : string <<get>> <<set>>
			+ slug : string <<get>> <<set>>
			+ id : int <<get>> <<set>>
			+ hid : string <<get>> <<set>>
			+ rating : string <<get>> <<set>>
			+ demographic : byte? <<get>> <<set>>
			+ md_images: List<TPage> <<get>> <<set>>
		}
		Manga --> "comic" Manga
		class Manga {
			+ title : string <<get>> <<set>>
			+ slug : string <<get>> <<set>>
			+ id : int <<get>> <<set>>
			+ rating : string <<get>> <<set>>
			+ desc : string <<get>> <<set>>
			+ parsed : string <<get>> <<set>>
			+ last_chapter : float <<get>> <<set>>
			+ total_chapter : int <<get>> <<set>>
		}
		Provider o-- Manga
		Provider o-- Chapter
		Provider o-- Page
		class Provider {
			+ <<readonly>> PageCdn : string
			+ <<readonly>> SiteUrl : string
			+ Provider()
			+ <<const>> Alias : string = "comickfun"
			+ <<override>> <<async>> GetMangaList(query:string) : Task<List<Manga>>
			+ <<override>> <<async>> GetManga(mangaIndex:int, mangaList:List<Manga>) : Task<Manga>
			+ <<override>> <<async>> GetChapter(chapIndex:int, chapterList:List<Chapter>) : Task<Chapter>
			+ <<override>> <<async>> GetPages(chap:Chapter) : Task<List<Page>>
			+ <<override>> <<async>> GetPage(name:string, cdnId:int) : Task<dynamic>
			+ <<override>> GetChapterUrl(manga:Manga, chap:Chapter) : String
		}
	}

	BasePage <|-- DotNeet.Providers.ComickFun.Page
	"BaseChapter`1" "<Page>" <|-- DotNeet.Providers.ComickFun.Chapter
	"BaseManga`1" "<Chapter>" <|-- DotNeet.Providers.ComickFun.Manga
	"MangaProvider`3" "<Manga,Chapter,Page>" <|-- DotNeet.Providers.ComickFun.Provider
	Program --> DotNeet.Providers.ProvidersList
}
@enduml
